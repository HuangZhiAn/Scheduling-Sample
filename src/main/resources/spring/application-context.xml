<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/task
        http://www.springframework.org/schema/task/spring-task-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <context:component-scan base-package="com.hza.service"/>

    <!--使用db.properties文件-->
    <!--<context:property-placeholder location="classpath:db.properties" />
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
          destroy-method="close">
        <property name="driverClass" value="${driver}"/>
        <property name="jdbcUrl" value="${urlUseSsl}"/>
        <property name="user" value="${user}"/>
        <property name="password" value="${password}"/>
    </bean>-->

    <!--任务类-->
    <bean id="testQuartz" class="com.hza.task.SendEMailTask">
    </bean>

    <!-- 将需要执行的定时任务注入JOB中。 -->
    <bean id="testJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="testQuartz"></property>
        <!-- 任务类中需要执行的方法 -->
        <property name="targetMethod" value="sendTextEmail"></property>
        <!--false: 上一次未执行完成的，要等待再执行。 -->
        <property name="concurrent" value="false"></property>
    </bean>
    <bean id="testJob2" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="testQuartz"></property>
        <!-- 任务类中需要执行的方法 -->
        <property name="targetMethod" value="sendTextEmail2"></property>
        <!--if false: 上一次未执行完成的，要等待再执行。 -->
        <property name="concurrent" value="false"></property>
    </bean>

    <!-- 基本的触发器 -->
    <bean id="testTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
        <property name="jobDetail" ref="testJob"></property>
        <!--开始延迟-->
        <!--<property name="startDelay" value="3000"></property>-->
        <property name="repeatInterval" value="10000"></property>
    </bean>

    <!--使用cron表达式的触发器-->
    <bean id="testCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="testJob2"></property>
        <property name="cronExpression" value="0/10 * * * * ?"></property>
    </bean>

    <!--将触发器添加到Scheduler-->
    <bean id="schedulerFactoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="testTrigger"></ref>
                <ref bean="testCronTrigger"></ref>
            </list>
        </property>
    </bean>

    <!--启用spring task注解-->
    <task:annotation-driven/>
    <context:annotation-config/>
    <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>
    <!--指定扫描位置-->
    <!--<context:component-scan base-package="com.hza.task"/>--><!--启用spring task-->

    <!--<task:executor id="executor" pool-size="5" />-->
    <task:scheduler id="scheduler" pool-size="10" />
    <!--<task:annotation-driven executor="executor" scheduler="scheduler" />-->

</beans>